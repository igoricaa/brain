# Generated by Django 5.2.4 on 2025-07-17 12:15

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('deals', '0003_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='DealAssessment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='UUID')),
                ('pros', models.TextField(blank=True, verbose_name='pros')),
                ('cons', models.TextField(blank=True, verbose_name='cons')),
                (
                    'recommendation',
                    models.CharField(
                        blank=True,
                        choices=[('prep to call', 'prep to call'), ('prep to pass', 'prep to pass')],
                        max_length=50,
                        verbose_name='recommendation',
                    ),
                ),
                ('investment_rationale', models.TextField(blank=True, verbose_name='investment rationale')),
                ('problem', models.TextField(blank=True, verbose_name='problem')),
                ('solution', models.TextField(blank=True, verbose_name='product/solution')),
                ('thesis_fit', models.TextField(blank=True, verbose_name='thesis fit')),
                ('traction', models.TextField(blank=True, verbose_name='traction')),
                ('intellectual_property', models.TextField(blank=True, verbose_name='intellectual property')),
                ('business_model', models.TextField(blank=True, verbose_name='business model')),
                ('market_sizing', models.TextField(blank=True, verbose_name='market sizing')),
                ('competition', models.TextField(blank=True, verbose_name='competition')),
                (
                    'quality_percentile',
                    models.CharField(
                        blank=True,
                        choices=[
                            ('top 1%', 'most interesting'),
                            ('top 5%', 'very interesting'),
                            ('top 10%', 'interesting'),
                            ('top 20%', 'potentially interesting'),
                            ('top 50%', 'not interesting'),
                        ],
                        max_length=50,
                        verbose_name='quality percentile',
                    ),
                ),
                ('numeric_score', models.FloatField(blank=True, null=True, verbose_name='numeric score')),
                (
                    'non_numeric_score',
                    models.CharField(
                        blank=True,
                        choices=[
                            ('excellent', 'Excellent'),
                            ('good', 'Good'),
                            ('average', 'Average'),
                            ('below average', 'Below average'),
                        ],
                        max_length=50,
                        verbose_name='non numeric score',
                    ),
                ),
                (
                    'confidence',
                    models.CharField(
                        blank=True,
                        choices=[('high', 'High'), ('low', 'Low')],
                        max_length=50,
                        verbose_name='confidence',
                    ),
                ),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='updated at')),
                (
                    'deal',
                    models.ForeignKey(
                        blank=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='assessments',
                        related_query_name='assessment',
                        to='deals.deal',
                        verbose_name='deal',
                    ),
                ),
            ],
            options={
                'verbose_name': 'Deal',
                'verbose_name_plural': 'Deals',
            },
        ),
    ]
