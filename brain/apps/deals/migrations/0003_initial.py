# Generated by Django 5.2.4 on 2025-07-10 16:49

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('companies', '0002_initial'),
        ('deals', '0002_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='deal',
            name='industries',
            field=models.ManyToManyField(
                blank=True,
                related_name='deals',
                related_query_name='deal',
                to='companies.industry',
                verbose_name='industries',
            ),
        ),
        migrations.CreateModel(
            name='Deck',
            fields=[
                (
                    'dealfile_ptr',
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to='deals.dealfile',
                    ),
                ),
                ('title', models.CharField(blank=True, max_length=255, verbose_name='title')),
                ('subtitle', models.CharField(blank=True, max_length=255, verbose_name='subtitle')),
                (
                    'file_format',
                    models.CharField(
                        blank=True, choices=[('PDF', 'PDF')], default='PDF', max_length=255, verbose_name='file format'
                    ),
                ),
                (
                    'ingestion_status',
                    models.CharField(
                        blank=True,
                        choices=[
                            ('PENDING', 'Pending'),
                            ('STARTED', 'Started processing'),
                            ('SUCCESS', 'Successful'),
                            ('FAILURE', 'Failed'),
                            ('RETRY', 'Retrying'),
                            ('REVOKED', 'Revoked'),
                        ],
                        default='PENDING',
                        max_length=255,
                        verbose_name='ingestion status',
                    ),
                ),
                (
                    'ingestion_task_id',
                    models.CharField(blank=True, db_index=True, max_length=255, verbose_name='ingestion task ID'),
                ),
                ('text', models.TextField(blank=True, verbose_name='text')),
                (
                    'is_from_mailbox',
                    models.BooleanField(blank=True, db_index=True, default=False, verbose_name='is from mailbox'),
                ),
            ],
            options={
                'verbose_name': 'Deck',
                'verbose_name_plural': 'Decks',
            },
            bases=('deals.dealfile',),
        ),
        migrations.AddField(
            model_name='dealfile',
            name='deal',
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='files',
                related_query_name='file',
                to='deals.deal',
                verbose_name='deal',
            ),
        ),
        migrations.AddField(
            model_name='dualusesignal',
            name='category',
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='signals',
                related_query_name='signal',
                to='deals.dualusecategory',
                verbose_name='category',
            ),
        ),
        migrations.AddField(
            model_name='deal',
            name='dual_use_signals',
            field=models.ManyToManyField(
                blank=True,
                related_name='deals',
                related_query_name='deal',
                to='deals.dualusesignal',
                verbose_name='dual use signals',
            ),
        ),
        migrations.AddField(
            model_name='misseddeal',
            name='company',
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='missed_deals',
                related_query_name='missed_deal',
                to='companies.company',
                verbose_name='company',
            ),
        ),
        migrations.AddField(
            model_name='misseddeal',
            name='creator',
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='created_missed_deals',
                related_query_name='created_missed_deal',
                to=settings.AUTH_USER_MODEL,
                verbose_name='creator',
            ),
        ),
        migrations.AddField(
            model_name='misseddeal',
            name='funding_stage',
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='missed_deals',
                related_query_name='missed_deal',
                to='companies.fundingstage',
                verbose_name='funding stage',
            ),
        ),
        migrations.AddField(
            model_name='misseddeal',
            name='investment_stages',
            field=models.ManyToManyField(
                blank=True,
                help_text='the stages of investments made by this organization',
                related_name='investors_missed_deals',
                related_query_name='investor_missed_deal',
                to='companies.fundingstage',
                verbose_name='investment stages',
            ),
        ),
        migrations.AddField(
            model_name='misseddeal',
            name='investor_types',
            field=models.ManyToManyField(
                blank=True,
                help_text='type of investor this organization is (e.g. Angel, Fund of Funds, Venture Capital)',
                related_name='missed_deals',
                related_query_name='missed_deal',
                to='companies.investortype',
                verbose_name='investor type',
            ),
        ),
        migrations.AddField(
            model_name='misseddeal',
            name='ipo_status',
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='missed_deals',
                related_query_name='missed_deal',
                to='companies.ipostatus',
                verbose_name='IPO status',
            ),
        ),
        migrations.AddField(
            model_name='misseddeal',
            name='last_equity_funding_type',
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='missed_deals_equity_last',
                related_query_name='missed_deals_equity_last',
                to='companies.fundingtype',
                verbose_name='last equity funding type',
            ),
        ),
        migrations.AddField(
            model_name='misseddeal',
            name='last_funding_type',
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='missed_deals_last',
                related_query_name='missed_deal_last',
                to='companies.fundingtype',
                verbose_name='last funding round type',
            ),
        ),
        migrations.AddField(
            model_name='deckpage',
            name='deck',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name='pages',
                related_query_name='page',
                to='deals.deck',
                verbose_name='deck',
            ),
        ),
        migrations.AddConstraint(
            model_name='misseddeal',
            constraint=models.UniqueConstraint(
                fields=('company', 'last_funding_year', 'last_funding_month'),
                name='deals_misseddeal_company_last_funding_year_month_key',
            ),
        ),
    ]
