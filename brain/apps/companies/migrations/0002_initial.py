# Generated by Django 5.2.4 on 2025-07-10 16:49

import django.contrib.postgres.fields
import django.core.validators
import django.db.models.deletion
import django.db.models.functions.datetime
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('companies', '0001_initial'),
        ('socialgraph', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Founder',
            fields=[
                (
                    'profile_ptr',
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to='socialgraph.profile',
                    ),
                ),
            ],
            options={
                'verbose_name': 'Founder',
                'verbose_name_plural': 'Founders',
            },
            bases=('socialgraph.profile',),
        ),
        migrations.CreateModel(
            name='FundingStage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='UUID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name')),
                ('code', models.CharField(blank=True, max_length=255, null=True, unique=True, verbose_name='code')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('bg_color', models.CharField(blank=True, max_length=255, verbose_name='background color')),
                ('text_color', models.CharField(blank=True, max_length=255, verbose_name='text color')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='updated at')),
            ],
            options={
                'verbose_name': 'Funding Stage',
                'verbose_name_plural': 'Funding Stages',
            },
        ),
        migrations.CreateModel(
            name='FundingType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='UUID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name')),
                ('code', models.CharField(blank=True, max_length=255, null=True, unique=True, verbose_name='code')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('bg_color', models.CharField(blank=True, max_length=255, verbose_name='background color')),
                ('text_color', models.CharField(blank=True, max_length=255, verbose_name='text color')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='updated at')),
            ],
            options={
                'verbose_name': 'Funding Type',
                'verbose_name_plural': 'Funding Types',
            },
        ),
        migrations.CreateModel(
            name='Industry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='UUID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name')),
                ('code', models.CharField(blank=True, max_length=255, null=True, unique=True, verbose_name='code')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('bg_color', models.CharField(blank=True, max_length=255, verbose_name='background color')),
                ('text_color', models.CharField(blank=True, max_length=255, verbose_name='text color')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='updated at')),
            ],
            options={
                'verbose_name': 'Industry',
                'verbose_name_plural': 'Industries',
            },
        ),
        migrations.CreateModel(
            name='InvestorType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='UUID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name')),
                ('code', models.CharField(blank=True, max_length=255, null=True, unique=True, verbose_name='code')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('bg_color', models.CharField(blank=True, max_length=255, verbose_name='background color')),
                ('text_color', models.CharField(blank=True, max_length=255, verbose_name='text color')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='updated at')),
            ],
            options={
                'verbose_name': 'Investor Type',
                'verbose_name_plural': 'Investors Types',
            },
        ),
        migrations.CreateModel(
            name='IPOStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='UUID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name')),
                ('code', models.CharField(blank=True, max_length=255, null=True, unique=True, verbose_name='code')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('bg_color', models.CharField(blank=True, max_length=255, verbose_name='background color')),
                ('text_color', models.CharField(blank=True, max_length=255, verbose_name='text color')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='updated at')),
            ],
            options={
                'verbose_name': 'IPO Status',
                'verbose_name_plural': 'IPO Statuses',
            },
        ),
        migrations.CreateModel(
            name='TechnologyType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='UUID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name')),
                ('code', models.CharField(blank=True, max_length=255, null=True, unique=True, verbose_name='code')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('bg_color', models.CharField(blank=True, max_length=255, verbose_name='background color')),
                ('text_color', models.CharField(blank=True, max_length=255, verbose_name='text color')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='updated at')),
            ],
            options={
                'verbose_name': 'Technology Type',
                'verbose_name_plural': 'Technology Types',
            },
        ),
        migrations.AddField(
            model_name='company',
            name='creator',
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='created_company',
                related_query_name='created_companies',
                to=settings.AUTH_USER_MODEL,
                verbose_name='creator',
            ),
        ),
        migrations.AddField(
            model_name='clinicalstudy',
            name='company',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name='clinical_studies',
                related_query_name='clinical_study',
                to='companies.company',
                verbose_name='company',
            ),
        ),
        migrations.CreateModel(
            name='Founding',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                (
                    'age_at_founding',
                    models.PositiveIntegerField(
                        blank=True,
                        help_text='Can be estimated based on assumption the founder graduated with 22 years old.',
                        null=True,
                        verbose_name='age at founding',
                    ),
                ),
                (
                    'prior_founding_count',
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name='number of prior founding attempts'
                    ),
                ),
                (
                    'past_significant_employment',
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=255),
                        blank=True,
                        default=list,
                        size=None,
                        verbose_name='past significant employments',
                    ),
                ),
                (
                    'company_id',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='foundings',
                        related_query_name='founding',
                        to='companies.company',
                        verbose_name='company',
                    ),
                ),
                (
                    'founder_id',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='foundings',
                        related_query_name='founding',
                        to='companies.founder',
                        verbose_name='founder',
                    ),
                ),
            ],
            options={
                'verbose_name': 'Founding',
                'verbose_name_plural': 'Founding',
            },
        ),
        migrations.AddField(
            model_name='company',
            name='founders',
            field=models.ManyToManyField(
                blank=True,
                related_name='companies',
                related_query_name='company',
                through='companies.Founding',
                to='companies.founder',
                verbose_name='founder',
            ),
        ),
        migrations.AddField(
            model_name='company',
            name='funding_stage',
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='companies',
                related_query_name='company',
                to='companies.fundingstage',
                verbose_name='funding stage',
            ),
        ),
        migrations.AddField(
            model_name='company',
            name='investment_stages',
            field=models.ManyToManyField(
                blank=True,
                help_text='the stages of investments made by this organization',
                related_name='investors_companies',
                related_query_name='investor_company',
                to='companies.fundingstage',
                verbose_name='investment stages',
            ),
        ),
        migrations.AddField(
            model_name='company',
            name='last_equity_funding_type',
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='last_equity_for_companies',
                related_query_name='last_equity_for_company',
                to='companies.fundingtype',
                verbose_name='last equity funding type',
            ),
        ),
        migrations.AddField(
            model_name='company',
            name='last_funding_type',
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='last_for_companies',
                related_query_name='last_for_campany',
                to='companies.fundingtype',
                verbose_name='last funding round type',
            ),
        ),
        migrations.AddField(
            model_name='company',
            name='industries',
            field=models.ManyToManyField(
                blank=True,
                related_name='companies',
                related_query_name='company',
                to='companies.industry',
                verbose_name='industries',
            ),
        ),
        migrations.AddField(
            model_name='company',
            name='investor_types',
            field=models.ManyToManyField(
                blank=True,
                help_text='type of investor this organization is (e.g. Angel, Fund of Funds, Venture Capital)',
                related_name='companies',
                related_query_name='company',
                to='companies.investortype',
                verbose_name='investor type',
            ),
        ),
        migrations.AddField(
            model_name='company',
            name='ipo_status',
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='companies',
                related_query_name='company',
                to='companies.ipostatus',
                verbose_name='IPO status',
            ),
        ),
        migrations.AddField(
            model_name='company',
            name='technology_type',
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='companies',
                related_query_name='company',
                to='companies.technologytype',
                verbose_name='technology type',
            ),
        ),
        migrations.CreateModel(
            name='Grant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='UUID')),
                ('name', models.CharField(blank=True, max_length=255, verbose_name='name')),
                (
                    'potential_amount',
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=15, null=True, verbose_name='potential amount (USD)'
                    ),
                ),
                (
                    'obligated_amount',
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=15, null=True, verbose_name='obligated amount (USD)'
                    ),
                ),
                ('program_name', models.CharField(blank=True, max_length=255, verbose_name='program name')),
                ('phase', models.CharField(blank=True, max_length=255, verbose_name='phase')),
                ('branch', models.CharField(blank=True, max_length=255, verbose_name='branch')),
                ('sbir_id', models.CharField(blank=True, max_length=255, verbose_name='SBIR award ID')),
                ('award_year', models.PositiveIntegerField(blank=True, null=True, verbose_name='award year')),
                (
                    'award_month',
                    models.PositiveIntegerField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(12),
                        ],
                        verbose_name='award month',
                    ),
                ),
                ('award_date', models.DateField(blank=True, null=True, verbose_name='award date')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('granting_agency', models.CharField(blank=True, max_length=255, verbose_name='granting agency')),
                ('extras', models.JSONField(blank=True, default=dict, verbose_name='extras')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='updated at')),
                (
                    'company',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='grants',
                        related_query_name='grant',
                        to='companies.company',
                        verbose_name='company',
                    ),
                ),
            ],
            options={
                'verbose_name': 'Grant',
                'verbose_name_plural': 'Grants',
                'indexes': [models.Index(fields=['award_year', 'award_month'], name='companies_grant_award_ym_idx')],
            },
        ),
        migrations.CreateModel(
            name='PatentApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='UUID')),
                ('patent_number', models.CharField(blank=True, max_length=255, verbose_name='patent number')),
                ('number', models.CharField(blank=True, max_length=255, null=True, verbose_name='application number')),
                (
                    'confirmation_number',
                    models.SmallIntegerField(blank=True, null=True, verbose_name='application confirmation number'),
                ),
                (
                    'invention_title',
                    models.CharField(
                        blank=True,
                        help_text='Clear and concise technical description of the invention as provided by the patent applicant.',
                        max_length=255,
                        verbose_name='invention/application title',
                    ),
                ),
                (
                    'first_inventor_name',
                    models.CharField(
                        blank=True,
                        help_text='Name of the inventor with Rank One. Listed as first inventor in the patent application.',
                        max_length=255,
                        verbose_name='first inventor name',
                    ),
                ),
                (
                    'first_applicant_name',
                    models.CharField(
                        blank=True,
                        help_text='Name of the Applicant with Rank One. Listed as first applicant in the patent application.',
                        max_length=255,
                        verbose_name='first applicant name',
                    ),
                ),
                ('status_code', models.CharField(blank=True, max_length=255, verbose_name='status code')),
                (
                    'status_description',
                    models.CharField(blank=True, max_length=255, verbose_name='status description'),
                ),
                ('status_date', models.DateField(blank=True, null=True, verbose_name='status date')),
                (
                    'type_code',
                    models.CharField(
                        blank=True,
                        help_text='The specific value that indicates if the received patent application is considered a domestic application at the National Stage or is submitted as a Patent Cooperative Treaty (PCT) application.',
                        max_length=64,
                        verbose_name='application type code',
                    ),
                ),
                ('type_label', models.CharField(blank=True, max_length=128, verbose_name='application type label')),
                (
                    'type_category',
                    models.CharField(blank=True, max_length=128, verbose_name='application type category'),
                ),
                ('filing_date', models.DateField(blank=True, null=True, verbose_name='filing date')),
                ('grant_date', models.DateField(blank=True, null=True, verbose_name='grant date')),
                (
                    'earliest_publication_date',
                    models.DateField(blank=True, null=True, verbose_name='earliest publication date'),
                ),
                (
                    'earliest_publication_number',
                    models.CharField(blank=True, max_length=128, verbose_name='earliest publication number'),
                ),
                (
                    'pct_publication_date',
                    models.CharField(blank=True, max_length=128, verbose_name='PCT publication date'),
                ),
                (
                    'pct_publication_number',
                    models.CharField(blank=True, max_length=128, verbose_name='PCT publication number'),
                ),
                (
                    'publication_categories',
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=128),
                        blank=True,
                        default=list,
                        size=None,
                        verbose_name='publication categories',
                    ),
                ),
                (
                    'publication_dates',
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=64),
                        blank=True,
                        default=list,
                        size=None,
                        verbose_name='publication dates',
                    ),
                ),
                (
                    'publication_sequence_numbers',
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=64),
                        blank=True,
                        default=list,
                        help_text='Contains a number assigned to the publication of patent applications filed on or after November 29, 2000. It includes the year, followed by a seven digit number, followed by a kind code. Example: 200011234567A1.',
                        size=None,
                        verbose_name='publication sequence numbers',
                    ),
                ),
                (
                    'created_at',
                    models.DateTimeField(
                        auto_now_add=True,
                        db_default=django.db.models.functions.datetime.Now(),
                        verbose_name='created at',
                    ),
                ),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='updated at')),
                ('extras', models.JSONField(blank=True, default=dict, verbose_name='extras')),
                (
                    'company',
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='patent_applications',
                        related_query_name='patent_application',
                        to='companies.company',
                        verbose_name='company',
                    ),
                ),
            ],
            options={
                'verbose_name': 'Patent Application',
                'verbose_name_plural': 'Patent Applications',
                'constraints': [
                    models.UniqueConstraint(
                        fields=('number', 'company_id'), name='companies_patentapplication_number_company_id'
                    )
                ],
            },
        ),
    ]
