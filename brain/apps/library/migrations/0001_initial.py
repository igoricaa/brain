# Generated by Django 5.2.4 on 2025-07-10 16:49

import django.contrib.postgres.fields
import django.core.files.storage
import django.db.models.functions.datetime
import library.models.files
import library.storage
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name='ArxivSearch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='UUID')),
                (
                    'query',
                    models.CharField(
                        blank=True, help_text='a text search query.', max_length=255, verbose_name='query'
                    ),
                ),
                ('title', models.CharField(blank=True, max_length=255, verbose_name='title')),
                ('author', models.CharField(blank=True, max_length=255, verbose_name='author')),
                ('abstract', models.CharField(blank=True, max_length=255, verbose_name='abstract')),
                ('journal_reference', models.CharField(blank=True, max_length=255, verbose_name='journal reference')),
                ('category', models.CharField(blank=True, max_length=255, verbose_name='category')),
                (
                    'submitted_date',
                    models.CharField(
                        blank=True,
                        help_text='The expected format is [YYYYMMDDTTTT+TO+YYYYMMDDTTTT] were the TTTT is provided in 24 hour time to the minute, in GMT. We could construct the following query using submittedDate.',
                        max_length=50,
                        verbose_name='submitted date',
                    ),
                ),
                (
                    'created_at',
                    models.DateTimeField(
                        auto_now_add=True,
                        db_default=django.db.models.functions.datetime.Now(),
                        verbose_name='created at',
                    ),
                ),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='updated at')),
                ('extras', models.JSONField(blank=True, default=dict, verbose_name='extras')),
            ],
            options={
                'verbose_name': 'ArXiv Search',
                'verbose_name_plural': 'ArXiv Searches',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='UUID')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('code', models.SlugField(blank=True, unique=True, verbose_name='code')),
                (
                    'created_at',
                    models.DateTimeField(
                        auto_now_add=True,
                        db_default=django.db.models.functions.datetime.Now(),
                        verbose_name='created at',
                    ),
                ),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='updated at')),
                ('extras', models.JSONField(blank=True, default=dict, verbose_name='extras')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='DocumentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='UUID')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('code', models.SlugField(blank=True, unique=True, verbose_name='code')),
                (
                    'created_at',
                    models.DateTimeField(
                        auto_now_add=True,
                        db_default=django.db.models.functions.datetime.Now(),
                        verbose_name='created at',
                    ),
                ),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='updated at')),
                ('extras', models.JSONField(blank=True, default=dict, verbose_name='extras')),
            ],
            options={
                'verbose_name': 'Document Type',
                'verbose_name_plural': 'Document Types',
            },
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='UUID')),
                (
                    'file',
                    models.FileField(
                        blank=True,
                        max_length=255,
                        storage=django.core.files.storage.FileSystemStorage(),
                        upload_to=library.storage.default_file_path,
                        verbose_name='file',
                    ),
                ),
                (
                    'mime_type',
                    models.CharField(
                        blank=True,
                        default='application/octet-stream',
                        help_text='MIME type of uploaded content',
                        max_length=255,
                        validators=[library.models.files.mimetype_validator],
                    ),
                ),
                ('src_id', models.CharField(blank=True, max_length=255, verbose_name='external ID')),
                ('src_url', models.URLField(blank=True, verbose_name='external URL')),
                ('src_download_url', models.URLField(blank=True, verbose_name='external download URL')),
                (
                    'tags',
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=255),
                        blank=True,
                        default=list,
                        size=None,
                        verbose_name='tags',
                    ),
                ),
                ('is_deleted', models.BooleanField(blank=True, default=False, null=True, verbose_name='is deleted')),
                ('extras', models.JSONField(blank=True, default=dict, verbose_name='extras')),
                (
                    'created_at',
                    models.DateTimeField(
                        auto_now_add=True,
                        db_default=django.db.models.functions.datetime.Now(),
                        verbose_name='created at',
                    ),
                ),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='updated at')),
            ],
            options={
                'verbose_name': 'File',
                'verbose_name_plural': 'Files',
            },
        ),
    ]
