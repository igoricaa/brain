# Generated by Django 5.0.2 on 2024-10-31 17:59

import django.contrib.postgres.fields
import django.contrib.postgres.fields.ranges
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('dual_use', '0034_alter_company_cb_unique_constraints'),
    ]

    operations = [
        migrations.CreateModel(
            name='InvestorType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='UUID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name')),
                ('code', models.CharField(blank=True, max_length=255, null=True, unique=True, verbose_name='code')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('bg_color', models.CharField(blank=True, max_length=255, verbose_name='background color')),
                ('text_color', models.CharField(blank=True, max_length=255, verbose_name='text color')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='updated at')),
            ],
            options={
                'verbose_name': 'Investor Type',
                'verbose_name_plural': 'Investors Types',
            },
        ),
        migrations.AddField(
            model_name='company',
            name='acquired_on',
            field=models.DateField(blank=True, help_text='date the acquisition was announced', null=True, verbose_name='acquired on'),
        ),
        migrations.AddField(
            model_name='company',
            name='acquirer_url',
            field=models.URLField(blank=True, verbose_name='acquired by URL'),
        ),
        migrations.AddField(
            model_name='company',
            name='acquisition_name',
            field=models.CharField(blank=True, help_text='auto-generated name of the transaction (e.g. Parakey acquired by Facebook)', max_length=255, verbose_name='acquisition name'),
        ),
        migrations.AddField(
            model_name='company',
            name='acquisition_price',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True, verbose_name='acquisition price (USD)'),
        ),
        migrations.AddField(
            model_name='company',
            name='acquisition_terms',
            field=models.CharField(blank=True, choices=[('cash', 'Cash'), ('cash_and_stock', 'Cash & Stock'), ('stock', 'Stock')], max_length=64, verbose_name='acquisition terms'),
        ),
        migrations.AddField(
            model_name='company',
            name='acquisition_type',
            field=models.CharField(blank=True, choices=[('acquihire', 'Acquihire'), ('acquisition', 'Acquisition'), ('lbo', 'Leveraged Buyout'), ('management_buyout', 'Management Buyout'), ('merge', 'Merger')], max_length=64, verbose_name='acquisition type'),
        ),
        migrations.AddField(
            model_name='company',
            name='actively_hiring',
            field=models.BooleanField(blank=True, help_text='Has at least one active job posting. Usually based on data from Jobbio', null=True, verbose_name='actively hiring'),
        ),
        migrations.AddField(
            model_name='company',
            name='apps_count',
            field=models.PositiveIntegerField(blank=True, help_text='Total number of apps a given publisher has consolidated between itunes and Google Play. Usually detected by Apptopia.', null=True, verbose_name='number of apps'),
        ),
        migrations.AddField(
            model_name='company',
            name='apps_downloads_count_30d',
            field=models.PositiveIntegerField(blank=True, help_text='Total downloads for the previous month for all apps published by this company.', null=True, verbose_name='apps downloads last 30 days'),
        ),
        migrations.AddField(
            model_name='company',
            name='cb_growth_category',
            field=models.CharField(blank=True, max_length=64, verbose_name='crunchbase growth category'),
        ),
        migrations.AddField(
            model_name='company',
            name='cb_growth_confidence',
            field=models.CharField(blank=True, max_length=64, verbose_name='crunchbase growth confidence'),
        ),
        migrations.AddField(
            model_name='company',
            name='cb_hub_tags',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=255), blank=True, default=list, size=None, verbose_name='crunchbase hub tags'),
        ),
        migrations.AddField(
            model_name='company',
            name='cb_industries_groups',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=255), blank=True, default=list, size=None, verbose_name='crunchbase industry groups'),
        ),
        migrations.AddField(
            model_name='company',
            name='cb_num_articles',
            field=models.PositiveIntegerField(blank=True, null=True, verbose_name='number of articles (crunchbase)'),
        ),
        migrations.AddField(
            model_name='company',
            name='cb_num_events_appearances',
            field=models.PositiveIntegerField(blank=True, null=True, verbose_name='number of events (crunchbase)'),
        ),
        migrations.AddField(
            model_name='company',
            name='cb_num_similar_companies',
            field=models.PositiveIntegerField(blank=True, null=True, verbose_name='number of similar companies (crunchbase)'),
        ),
        migrations.AddField(
            model_name='company',
            name='cb_rank',
            field=models.PositiveIntegerField(blank=True, null=True, verbose_name='crunchbase company rank'),
        ),
        migrations.AddField(
            model_name='company',
            name='cb_rank_delta_d30',
            field=models.FloatField(blank=True, null=True, verbose_name='crunchbase trend score (30 days)'),
        ),
        migrations.AddField(
            model_name='company',
            name='cb_rank_delta_d7',
            field=models.FloatField(blank=True, null=True, verbose_name='crunchbase trend score (7 days)'),
        ),
        migrations.AddField(
            model_name='company',
            name='cb_rank_delta_d90',
            field=models.FloatField(blank=True, null=True, verbose_name='crunchbase trend score (90 days)'),
        ),
        migrations.AddField(
            model_name='company',
            name='closed_on',
            field=models.DateField(blank=True, help_text='date when the organization is closed', null=True, verbose_name='closed date'),
        ),
        migrations.AddField(
            model_name='company',
            name='company_type',
            field=models.CharField(blank=True, choices=[('for_profit', 'For Profit'), ('non_profit', 'Non-Profit')], max_length=64, verbose_name='company type'),
        ),
        migrations.AddField(
            model_name='company',
            name='contact_email',
            field=models.EmailField(blank=True, max_length=254, verbose_name='contact email'),
        ),
        migrations.AddField(
            model_name='company',
            name='delisted_on',
            field=models.DateField(blank=True, help_text='date the company was delisted from stock market', null=True, verbose_name='delisted on'),
        ),
        migrations.AddField(
            model_name='company',
            name='exit_on',
            field=models.DateField(blank=True, help_text='date the organization was acquired or went public', null=True, verbose_name='exit date'),
        ),
        migrations.AddField(
            model_name='company',
            name='facebook_url',
            field=models.URLField(blank=True, verbose_name='facebook URL'),
        ),
        migrations.AddField(
            model_name='company',
            name='hq_postal_code',
            field=models.CharField(blank=True, max_length=64, verbose_name='HQ postal/zip code'),
        ),
        migrations.AddField(
            model_name='company',
            name='hq_regions_names',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=64), blank=True, default=list, size=None, verbose_name='HQ regions'),
        ),
        migrations.AddField(
            model_name='company',
            name='investment_stages',
            field=models.ManyToManyField(blank=True, help_text='the stages of investments made by this organization', related_name='investors_companies', related_query_name='investor_company', to='dual_use.fundingstage', verbose_name='investment stages'),
        ),
        migrations.AddField(
            model_name='company',
            name='ipo_money_raised',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True, verbose_name='money raised at IPO (USD)'),
        ),
        migrations.AddField(
            model_name='company',
            name='ipo_valuation',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True, verbose_name='valuation at IPO (USD)'),
        ),
        migrations.AddField(
            model_name='company',
            name='it_spending_amount',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Usually be detected by Aberdeen.', max_digits=15, null=True, verbose_name='IT spending per year (USD)'),
        ),
        migrations.AddField(
            model_name='company',
            name='last_equity_funding_amount',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True, verbose_name='last equity funding amount (USD)'),
        ),
        migrations.AddField(
            model_name='company',
            name='last_equity_funding_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='companies_equity_last', related_query_name='company_equity_last', to='dual_use.fundingtype', verbose_name='last equity funding type'),
        ),
        migrations.AddField(
            model_name='company',
            name='last_key_employee_change',
            field=models.DateField(blank=True, help_text='Date company last hired executive (VP & above)', null=True, verbose_name='last leadership hiring date'),
        ),
        migrations.AddField(
            model_name='company',
            name='last_layoff_date',
            field=models.DateField(blank=True, null=True, verbose_name='last layoff date'),
        ),
        migrations.AddField(
            model_name='company',
            name='made_acquisitions',
            field=models.BooleanField(blank=True, null=True, verbose_name='made acquisitions'),
        ),
        migrations.AddField(
            model_name='company',
            name='num_acquisitions',
            field=models.PositiveIntegerField(blank=True, help_text='sum of all acquisitions related to the organization', null=True, verbose_name='number of acquisitions'),
        ),
        migrations.AddField(
            model_name='company',
            name='num_employees_range',
            field=django.contrib.postgres.fields.ranges.IntegerRangeField(blank=True, choices=[((1, 11), '1 - 10'), ((11, 51), '11 - 50'), ((51, 101), '51 - 100'), ((101, 251), '101 - 250'), ((251, 501), '251 - 500'), ((501, 1001), '501 - 1000'), ((1001, 5001), '1001 - 5000'), ((5001, 10001), '5001 - 10000'), ((10001, None), '10001 +')], null=True, verbose_name='number of employees (range)'),
        ),
        migrations.AddField(
            model_name='company',
            name='num_investors',
            field=models.PositiveIntegerField(blank=True, null=True, verbose_name='number of investors'),
        ),
        migrations.AddField(
            model_name='company',
            name='num_lead_investors',
            field=models.PositiveIntegerField(blank=True, null=True, verbose_name='number of lead investors'),
        ),
        migrations.AddField(
            model_name='company',
            name='num_sub_organizations',
            field=models.PositiveIntegerField(blank=True, null=True, verbose_name='number of sub-organizations'),
        ),
        migrations.AddField(
            model_name='company',
            name='operating_status',
            field=models.CharField(blank=True, choices=[('active', 'Active'), ('closed', 'Closed')], max_length=64, verbose_name='operating status'),
        ),
        migrations.AddField(
            model_name='company',
            name='phone_number',
            field=models.CharField(blank=True, max_length=64, verbose_name='phone number'),
        ),
        migrations.AddField(
            model_name='company',
            name='popular_patent_class',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=255), blank=True, default=list, help_text='Most popular classes of patent across all the companies patents owned or applied for. Detected by IPqwery.', size=None, verbose_name='most popular patent class'),
        ),
        migrations.AddField(
            model_name='company',
            name='revenue_range',
            field=django.contrib.postgres.fields.ranges.DecimalRangeField(blank=True, null=True, verbose_name='estimated revenue range (USD)'),
        ),
        migrations.AddField(
            model_name='company',
            name='stock_exchange_symbol',
            field=models.CharField(blank=True, max_length=64, verbose_name='stock exchange'),
        ),
        migrations.AddField(
            model_name='company',
            name='stock_symbol',
            field=models.CharField(blank=True, max_length=64, verbose_name='stock symbol'),
        ),
        migrations.AddField(
            model_name='company',
            name='tech_stack_product_count',
            field=models.PositiveIntegerField(blank=True, help_text='Total number of products currently in use by this company. Usually detected by G2 Stack.', null=True, verbose_name='tech stack product count'),
        ),
        migrations.AddField(
            model_name='company',
            name='total_equity_funding_amount',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True, verbose_name='total equity funding amount (USD)'),
        ),
        migrations.AddField(
            model_name='company',
            name='trademark_patent_class',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=255), blank=True, default=list, size=None, verbose_name='most popular trademark class'),
        ),
        migrations.AddField(
            model_name='company',
            name='trademarks_count',
            field=models.PositiveIntegerField(blank=True, null=True, verbose_name='number of trademarks registered'),
        ),
        migrations.AddField(
            model_name='company',
            name='twitter_url',
            field=models.URLField(blank=True, verbose_name='twitter URL'),
        ),
        migrations.AddField(
            model_name='company',
            name='valuation_date',
            field=models.DateField(blank=True, null=True, verbose_name='most recent valuation date'),
        ),
        migrations.AddField(
            model_name='company',
            name='valuation_range',
            field=django.contrib.postgres.fields.ranges.DecimalRangeField(blank=True, null=True, verbose_name='recent valuation range (USD)'),
        ),
        migrations.AddField(
            model_name='company',
            name='was_acquired',
            field=models.BooleanField(blank=True, null=True, verbose_name='was acquired'),
        ),
        migrations.AddField(
            model_name='company',
            name='web_avg_visits_6m',
            field=models.PositiveIntegerField(blank=True, null=True, verbose_name='web average monthly visits (6 months)'),
        ),
        migrations.AddField(
            model_name='company',
            name='web_bounce_rate',
            field=models.FloatField(blank=True, help_text='Percentage of visitors to site who navigate away after viewing only one page.', null=True, verbose_name='web bounce rate'),
        ),
        migrations.AddField(
            model_name='company',
            name='web_bounce_rate_growth',
            field=models.FloatField(blank=True, null=True, verbose_name='web bounce rate growth'),
        ),
        migrations.AddField(
            model_name='company',
            name='web_monthly_traffic_rank_change',
            field=models.IntegerField(blank=True, help_text='The raw number of rank positions that this site has changed from last month.', null=True, verbose_name='monthly web rank change'),
        ),
        migrations.AddField(
            model_name='company',
            name='web_monthly_traffic_rank_growth',
            field=models.FloatField(blank=True, help_text='Change in traffic rank of site in a given country from previous month.', null=True, verbose_name='monthly web rank growth'),
        ),
        migrations.AddField(
            model_name='company',
            name='web_monthly_visits',
            field=models.PositiveIntegerField(blank=True, null=True, verbose_name='web monthly visits'),
        ),
        migrations.AddField(
            model_name='company',
            name='web_monthly_visits_growth',
            field=models.FloatField(blank=True, help_text='Percent change in total visits to site from previous month. Includes both desktop and mobile web.', null=True, verbose_name='web monthly visits growth'),
        ),
        migrations.AddField(
            model_name='company',
            name='web_pages_per_visit',
            field=models.FloatField(blank=True, null=True, verbose_name='web page views per visit'),
        ),
        migrations.AddField(
            model_name='company',
            name='web_pages_per_visit_growth',
            field=models.FloatField(blank=True, null=True, verbose_name='web page views per visit growth'),
        ),
        migrations.AddField(
            model_name='company',
            name='web_tech_count',
            field=models.PositiveIntegerField(blank=True, help_text='Number of technologies currently in used by company website. Usually detected by BuiltWith.', null=True, verbose_name='web active tech count'),
        ),
        migrations.AddField(
            model_name='company',
            name='web_traffic_rank',
            field=models.PositiveIntegerField(blank=True, help_text='Traffic rank of site, as compared to all other sites on the web.', null=True, verbose_name='web global traffic rank'),
        ),
        migrations.AddField(
            model_name='company',
            name='web_visit_duration',
            field=models.FloatField(blank=True, help_text='Average time spent by users on a website, per visit in seconds. Includes both desktop and mobile web.', null=True, verbose_name='web visit duration'),
        ),
        migrations.AddField(
            model_name='company',
            name='web_visit_duration_growth',
            field=models.FloatField(blank=True, help_text='Average time spent by users on a website, per visit in seconds. Includes both desktop and mobile web.', null=True, verbose_name='web visit duration growth'),
        ),
        migrations.AddField(
            model_name='company',
            name='went_public_on',
            field=models.DateField(blank=True, null=True, verbose_name='IPO date'),
        ),
        migrations.AlterField(
            model_name='company',
            name='acquirer_name',
            field=models.CharField(blank=True, max_length=255, verbose_name='acquirer name'),
        ),
        migrations.AlterField(
            model_name='company',
            name='investors_names',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=255), blank=True, default=list, help_text='usually includes only top investors', size=None, verbose_name='investors names'),
        ),
        migrations.AddField(
            model_name='company',
            name='investor_types',
            field=models.ManyToManyField(blank=True, help_text='type of investor this organization is (e.g. Angel, Fund of Funds, Venture Capital)', related_name='companies', related_query_name='company', to='dual_use.investortype', verbose_name='investor type'),
        ),
    ]
