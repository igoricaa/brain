# Generated by Django 5.0.2 on 2024-08-22 19:36

import django.contrib.postgres.fields
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='FundingStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='UUID')),
                ('name', models.CharField(blank=True, max_length=255, verbose_name='name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('bg_color', models.CharField(blank=True, max_length=255, verbose_name='background color')),
                ('text_color', models.CharField(blank=True, max_length=255, verbose_name='text color')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='updated at')),
            ],
            options={
                'verbose_name': 'Funding Status',
                'verbose_name_plural': 'Funding Statuses',
            },
        ),
        migrations.CreateModel(
            name='FundingType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='UUID')),
                ('name', models.CharField(blank=True, max_length=255, verbose_name='name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('bg_color', models.CharField(blank=True, max_length=255, verbose_name='background color')),
                ('text_color', models.CharField(blank=True, max_length=255, verbose_name='text color')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='updated at')),
            ],
            options={
                'verbose_name': 'Funding Type',
                'verbose_name_plural': 'Funding Types',
            },
        ),
        migrations.CreateModel(
            name='Industry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='UUID')),
                ('name', models.CharField(blank=True, max_length=255, verbose_name='name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('bg_color', models.CharField(blank=True, max_length=255, verbose_name='background color')),
                ('text_color', models.CharField(blank=True, max_length=255, verbose_name='text color')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='updated at')),
            ],
            options={
                'verbose_name': 'Industry',
                'verbose_name_plural': 'Industries',
            },
        ),
        migrations.CreateModel(
            name='TechnologyType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='UUID')),
                ('name', models.CharField(blank=True, max_length=255, verbose_name='name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('bg_color', models.CharField(blank=True, max_length=255, verbose_name='background color')),
                ('text_color', models.CharField(blank=True, max_length=255, verbose_name='text color')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='updated at')),
            ],
            options={
                'verbose_name': 'Technology Type',
                'verbose_name_plural': 'Technology Types',
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='UUID')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('website', models.URLField(blank=True, verbose_name='website')),
                ('year_founded', models.PositiveIntegerField(blank=True, null=True, verbose_name='year founded')),
                ('year_evaluated', models.PositiveIntegerField(blank=True, null=True, verbose_name='year evaluated')),
                ('hq_country_name', models.CharField(blank=True, max_length=255, verbose_name='HQ country')),
                ('hq_state_name', models.CharField(blank=True, max_length=255, verbose_name='HQ state')),
                ('hq_city_name', models.CharField(blank=True, max_length=255, verbose_name='HQ city')),
                ('industries_names_cb', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=255), blank=True, default=list, size=None, verbose_name='industries (crunchbase)')),
                ('patents_granted_count', models.PositiveIntegerField(blank=True, null=True, verbose_name='number of patents granted')),
                ('founders_count', models.PositiveIntegerField(blank=True, null=True, verbose_name='number of founders')),
                ('founders_names', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=255), blank=True, default=list, size=None, verbose_name='founder names')),
                ('has_diversity_on_founders', models.BooleanField(blank=True, null=True, verbose_name='has diversity on founding team')),
                ('has_women_on_founders', models.BooleanField(blank=True, null=True, verbose_name='women on founding team')),
                ('has_african_on_founders', models.BooleanField(blank=True, null=True, verbose_name='Black/African on founding team')),
                ('has_hispanic_on_founders', models.BooleanField(blank=True, null=True, verbose_name='Hispanic on founding team')),
                ('has_asian_on_founders', models.BooleanField(blank=True, null=True, verbose_name='Asian on founding team')),
                ('has_meo_on_founders', models.BooleanField(blank=True, null=True, verbose_name='Middle Eastern/Other on founding team')),
                ('last_funding_date', models.DateField(blank=True, null=True, verbose_name='last funding date')),
                ('last_funding_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True, verbose_name='last funding amount (USD)')),
                ('total_funding_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True, verbose_name='total funding amount (USD)')),
                ('founding_rounds_count', models.PositiveIntegerField(blank=True, null=True, verbose_name='number of founding rounds')),
                ('investors_names', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=255), blank=True, default=list, size=None, verbose_name='investor names')),
                ('thesis_fit', models.BooleanField(blank=True, null=True, verbose_name='thesis fit')),
                ('thesis_fit_assessment', models.TextField(blank=True, verbose_name='thesis fit assessment')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='updated at')),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_du_companies', related_query_name='created_du_company', to=settings.AUTH_USER_MODEL, verbose_name='creator')),
                ('funding_status', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='companies', related_query_name='company', to='dual_use.fundingstatus', verbose_name='funding status')),
                ('last_funding_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='companies_last', related_query_name='company_last', to='dual_use.fundingtype', verbose_name='last funding round type')),
                ('industries', models.ManyToManyField(blank=True, related_name='companies', related_query_name='company', to='dual_use.industry', verbose_name='industries')),
                ('technology_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='companies', related_query_name='company', to='dual_use.technologytype', verbose_name='technology type')),
            ],
        ),
        migrations.CreateModel(
            name='Founder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='UUID')),
                ('name', models.CharField(blank=True, max_length=255, verbose_name='name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('linkedin_url', models.URLField(blank=True, null=True, verbose_name='Linkedin URL')),
                ('bachelor_grad_year', models.PositiveIntegerField(blank=True, help_text='estimate year when 22 years old', null=True, verbose_name="bachelor's graduation year")),
                ('age_at_founding', models.PositiveIntegerField(blank=True, null=True, verbose_name='age at founding')),
                ('bachelor_degree_type', models.CharField(blank=True, max_length=128, verbose_name="bachelor's degree type")),
                ('bachelor_school', models.CharField(blank=True, max_length=255, verbose_name="bachelor's school")),
                ('graduate_degree_type', models.CharField(blank=True, max_length=128, verbose_name='graduate degree type')),
                ('graduate_school', models.CharField(blank=True, max_length=255, verbose_name='graduate school')),
                ('phd_school', models.CharField(blank=True, max_length=255, verbose_name='PHD school')),
                ('has_military_or_govt_background', models.BooleanField(blank=True, null=True, verbose_name='has government or military background')),
                ('prior_founding_count', models.PositiveIntegerField(blank=True, null=True, verbose_name='number of prior funding attempts')),
                ('past_significant_employment', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=255), blank=True, default=list, size=None, verbose_name='last significant employment')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='updated at')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='founders', related_query_name='founder', to='dual_use.company', verbose_name='company')),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_du_founders', related_query_name='created_du_founder', to=settings.AUTH_USER_MODEL, verbose_name='creator')),
            ],
            options={
                'verbose_name': 'Founder',
                'verbose_name_plural': 'Founders',
            },
        ),
    ]
