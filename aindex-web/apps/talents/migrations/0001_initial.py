# Generated by Django 5.1.8 on 2025-05-07 13:07

import django.contrib.postgres.fields
import django.db.models.deletion
import django.db.models.functions.datetime
import django_countries.fields
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('companies', '0029_clinicalstudy'),
    ]

    operations = [
        migrations.CreateModel(
            name='Founder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='UUID')),
                ('name', models.CharField(blank=True, max_length=255, verbose_name='name')),
                ('title', models.CharField(blank=True, max_length=255, verbose_name='title')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('linkedin_url', models.URLField(blank=True, null=True, verbose_name='Linkedin URL')),
                ('country', django_countries.fields.CountryField(blank=True, max_length=2, verbose_name='country')),
                ('location', models.CharField(blank=True, max_length=255, verbose_name='location')),
                ('bachelor_grad_year', models.PositiveIntegerField(blank=True, null=True, verbose_name="bachelor's graduation year")),
                ('age_at_founding', models.PositiveIntegerField(blank=True, help_text='Can be estimated based on assumption the founder graduated with 22 years old.', null=True, verbose_name='age at founding')),
                ('bachelor_degree_type', models.CharField(blank=True, max_length=128, verbose_name="bachelor's degree type")),
                ('bachelor_school', models.CharField(blank=True, max_length=255, verbose_name="bachelor's school")),
                ('graduate_degree_type', models.CharField(blank=True, max_length=128, verbose_name='graduate degree type')),
                ('graduate_school', models.CharField(blank=True, max_length=255, verbose_name='graduate school')),
                ('phd_school', models.CharField(blank=True, max_length=255, verbose_name='PHD school')),
                ('has_military_or_govt_background', models.BooleanField(blank=True, null=True, verbose_name='has government or military background')),
                ('military_or_govt_background', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=255), blank=True, default=list, help_text='example: government agency, army, air force, navy', size=None, verbose_name='government or military background')),
                ('prior_founding_count', models.PositiveIntegerField(blank=True, null=True, verbose_name='number of prior founding attempts')),
                ('past_significant_employment', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=255), blank=True, default=list, size=None, verbose_name='last significant employment')),
                ('extras', models.JSONField(blank=True, default=dict, verbose_name='extras')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_default=django.db.models.functions.datetime.Now(), verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='updated at')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='founders', related_query_name='founder', to='companies.company', verbose_name='company')),
            ],
            options={
                'verbose_name': 'Founder',
                'verbose_name_plural': 'Founders',
            },
        ),
        migrations.CreateModel(
            name='FounderEducation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='UUID')),
                ('institution_name', models.CharField(blank=True, max_length=255, verbose_name='institution name')),
                ('program_name', models.CharField(blank=True, max_length=255, verbose_name='program')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('website', models.URLField(blank=True, verbose_name='institution website')),
                ('linkedin_url', models.URLField(blank=True, verbose_name='institution linkedin URL')),
                ('date_from', models.CharField(blank=True, max_length=255, verbose_name='from date')),
                ('date_to', models.CharField(blank=True, max_length=255, verbose_name='to date')),
                ('extras', models.JSONField(blank=True, default=dict, verbose_name='extras')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_default=django.db.models.functions.datetime.Now(), verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='updated at')),
                ('founder', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='educations', related_query_name='education', to='talents.founder', verbose_name='founder')),
            ],
            options={
                'verbose_name': 'Founder Education',
                'verbose_name_plural': 'Founders Education',
            },
        ),
        migrations.CreateModel(
            name='FounderExperience',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='UUID')),
                ('company_name', models.CharField(blank=True, max_length=255, verbose_name='company name')),
                ('title', models.CharField(blank=True, max_length=255, verbose_name='title')),
                ('location', models.CharField(blank=True, max_length=255, verbose_name='location')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('website', models.URLField(blank=True, verbose_name='website')),
                ('linkedin_url', models.URLField(blank=True, verbose_name='linkedin URL')),
                ('date_from', models.CharField(blank=True, max_length=255, verbose_name='from date')),
                ('date_to', models.CharField(blank=True, max_length=255, verbose_name='to date')),
                ('duration', models.DurationField(blank=True, null=True, verbose_name='duration')),
                ('extras', models.JSONField(blank=True, default=dict, verbose_name='extras')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='updated at')),
                ('founder', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='experiences', related_query_name='experience', to='talents.founder', verbose_name='founder')),
            ],
            options={
                'verbose_name': 'Founder Experience',
                'verbose_name_plural': 'Founders Experiences',
            },
        ),
    ]
