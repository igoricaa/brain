# Generated by Django 5.1.8 on 2025-06-19 09:42

import django.contrib.postgres.fields
import django.db.models.deletion
import django.db.models.functions.datetime
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('librarain', '0004_add_documentsection'),
    ]

    operations = [
        migrations.CreateModel(
            name='SemanticScholarSearch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='UUID')),
                ('query', models.CharField(blank=True, help_text='A plain-text search query string. No special query syntax is supported. Hyphenated query terms yield no matches (replace it with space to find matches.)', max_length=255, verbose_name='query')),
                ('publication_types', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=50), blank=True, default=list, size=None, verbose_name='publication types')),
                ('fields_of_study', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=128), blank=True, default=list, size=None, verbose_name='fields of study')),
                ('open_access_pdf', models.BooleanField(default=False, help_text='Restricts results to only include papers with a public PDF.', verbose_name='open access PDF')),
                ('min_citation_count', models.PositiveIntegerField(blank=True, help_text='Restricts results to only include papers with the minimum number of citations', null=True, verbose_name='minimum citations')),
                ('publication_date', models.CharField(blank=True, help_text='Restricts results to the given range of publication dates or years (inclusive). Accepts the format <startDate>:<endDate> with each date in YYYY-MM-DD format. Partial dates including year or year and month only, exact dates and open ended ranges are also supported.', max_length=50, verbose_name='publication date range')),
                ('year', models.CharField(blank=True, help_text='Restricts results to the given publication year or range of years (inclusive). Examples: `2019` in 2019; `2016-2020` as early as 2016 or as late as 2020; `2010-` during or after 2010; `-2015` before or during 2015', max_length=50, verbose_name='year')),
                ('venue', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=128), blank=True, default=list, size=None, verbose_name='venue')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_default=django.db.models.functions.datetime.Now(), verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='updated at')),
                ('extras', models.JSONField(blank=True, default=dict, verbose_name='extras')),
                ('source', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='semantic_scholar_searches', related_query_name='semantic_scholar_search', to='librarain.source', verbose_name='source')),
            ],
            options={
                'verbose_name': 'Semantic Scholar Search',
                'verbose_name_plural': 'Semantic Scholar Searches',
            },
        ),
    ]
